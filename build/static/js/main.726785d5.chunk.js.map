{"version":3,"sources":["images/logo.svg","images/icon_pen.svg","components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Card","card","onCardClick","link","onClick","name","likes","length","api","options","this","url","fetch","then","res","ok","json","Promise","reject","status","_sendQuery","baseUrl","method","headers","body","JSON","stringify","id","info","avatar","authorization","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","initialCard","about","catch","err","console","log","iconPen","map","key","_id","Footer","PopupWithForm","title","submitText","submitWaitText","isOpen","onClose","children","action","noValidate","type","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.726785d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_pen.6bfdb354.svg\";","import React from 'react';\nimport logo from '../images/logo.svg'\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Card({ card, onCardClick }) {\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  return (\n    <li className=\"card\">\n      <div className=\"card__container\">\n        <div className=\"card__image-container\">\n          <img className=\"card__image\" src={card.link} onClick={handleClick} />\n        </div>\n        <button className=\"card__remove-button link-translucence\" />\n        <h3 className=\"card__title\">{card.name}</h3>\n        <button className=\"card__like-button link-translucence\" />\n        <p className=\"card__like-score\">{card.likes.length}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","const url = 'https://mesto.nomoreparties.co/v1/cohort-15';\nconst token = 'c791e527-e4b7-4175-8eba-6e62f06389ee';\n\nclass Api {\n  constructor(options) {\n    this.options = options;\n  }\n\n  _sendQuery(url, options) {\n    return fetch(url, options).then((res) => {\n      if (res.ok) { return res.json(); }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return this._sendQuery(`${this.options.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.options.headers\n    });\n  }\n\n  setCard(card) {\n    return this._sendQuery(`${this.options.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.options.headers,\n      body: JSON.stringify(card)\n    });\n  }\n\n  deleteCard(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.options.headers\n    });\n  }\n\n  setLike(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.options.headers,\n    });\n  }\n\n  deleteLike(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.options.headers\n    });\n  }\n\n  getUserInfo() {\n    return this._sendQuery(`${this.options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.options.headers\n    });\n  }\n\n  setUserInfo(info) {\n    return this._sendQuery(`${this.options.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.options.headers,\n      body: JSON.stringify(info)\n    });\n  }\n\n  setUserAvatar(avatar) {\n    return this._sendQuery(`${this.options.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.options.headers,\n      body: JSON.stringify(avatar)\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: url,\n  headers: {\n    authorization: token,\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","import React from 'react';\nimport Card from './Card.js';\nimport api from '../utils/api.js';\nimport iconPen from '../images/icon_pen.svg';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([info, initialCard]) => {\n        setUserName(info.name);\n        setUserDescription(info.about);\n        setUserAvatar(info.avatar);\n        setCards(initialCard);\n      }).catch(err => { console.log(err) });\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section id=\"profile\" className=\"lead\">\n        <figure className=\"profile\">\n          <div className=\"profile__avatar-continer\">\n            <img src={userAvatar} alt=\"Аватар\" className=\"profile__avatar-image\" />\n            <button className=\"profile__avatar-button\" onClick={onEditAvatar}>\n              <img src={iconPen} alt=\"\" className=\"profile__avatar-button-img\" />\n            </button>\n          </div>\n          <figcaption className=\"profile__info\">\n            <h1 className=\"profile__title\">{userName}</h1>\n            <p className=\"profile__subtitle\">{userDescription}</p>\n            <button className=\"profile__edit-button link-translucence\" onClick={onEditProfile} />\n          </figcaption>\n        </figure>\n        <button className=\"add-button link-translucence\" onClick={onAddPlace} />\n      </section>\n      <section className=\"cards\">\n        <ul className=\"cards__list\">\n          {cards.map(card => <Card card={card} key={card._id} onCardClick={onCardClick} />)}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({ name, title, submitText, submitWaitText, isOpen, onClose, children }) {\n  return (\n    <section id={`${name}Popup`} className={`popup popup_transparency-norm ${isOpen ? 'popup_opened' : ''}`}>\n      <form action=\"#\" name={name} className=\"form\" noValidate>\n        <button type=\"reset\" className=\"popup__close-button link-translucence\" onClick={onClose}></button>\n        <label className=\"form__label\">{title}</label>\n        {children}\n        <button type=\"submit\" className=\"form__submit form__submit_nonactive link-translucence\">\n          <span id=\"submitText\" className=\"form__submit-text\">{submitText}</span>\n          <span id=\"submitWaitText\" className=\"form__submit-text form__submit-text_hide\">{submitWaitText}</span>\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <section id=\"imagePopup\" className=\"popup popup_transparency-hard popup_opened\">\n      <figure className=\"image-popup\">\n        <button className=\"popup__close-button link-translucence\" onClick={onClose}></button>\n        <img className=\"image-popup__image\" src={card.link} />\n        <figcaption className=\"image-popup__title\">{card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditAvatar={handleEditAvatarClick}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardClick} />\n      <Footer />\n      <PopupWithForm\n        name='editProfile'\n        title='Редактировать профиль'\n        submitText='Сохранить'\n        submitWaitText='Сохранение...'\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"text\" placeholder=\"Имя\" name=\"name\" id=\"profile-name-input\" className=\"form__input\" minLength=\"2\"\n          maxLength=\"40\" required />\n        <span id=\"profile-name-input-error\" className=\"form__input-error\"></span>\n        <input type=\"text\" placeholder=\"Характеристика\" name=\"about\" id=\"profile-description-input\" className=\"form__input\"\n          minLength=\"2\" maxLength=\"200\" required />\n        <span id=\"profile-description-input-error\" className=\"form__input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        name='editProfileAvatar'\n        title='Обновить аватар'\n        submitText='Создать'\n        submitWaitText='Сохранение...'\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"url\" placeholder=\"Ссылка на изображение\" name=\"avatar\" id=\"avatar-link-input\" className=\"form__input\"\n          required />\n        <span id=\"avatar-link-input-error\" className=\"form__input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        name='addCard'\n        title='Новое место'\n        submitText='Создать'\n        submitWaitText='Сохранение...'\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"text\" placeholder=\"Название\" name=\"name\" id=\"card-name-input\" className=\"form__input\" minLength=\"1\"\n          maxLength=\"30\" required />\n        <span id=\"card-name-input-error\" className=\"form__input-error\"></span>\n        <input type=\"url\" placeholder=\"Ссылка на изображение\" name=\"link\" id=\"card-link-input\" className=\"form__input\"\n          required />\n        <span id=\"card-link-input-error\" className=\"form__input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        name='deleteCard'\n        title='Вы уверены?'\n        submitText='Да'\n        submitWaitText='Удаление...' />\n      {selectedCard && <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}