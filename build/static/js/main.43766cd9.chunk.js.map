{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg","images/icon_pen.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onClick","onLikeClick","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","item","removeButtonClassName","cardLikeButtonClassName","link","name","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onCardLike","id","avatar","iconPen","about","map","key","Footer","PopupWithForm","title","submitText","submitWaitText","isOpen","onSubmit","onClose","children","action","noValidate","type","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","placeholder","value","onChange","target","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","onAdd","setLink","ImagePopup","api","options","this","url","fetch","then","res","ok","json","Promise","reject","status","_sendQuery","baseUrl","method","headers","body","JSON","stringify","info","authorization","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","closeAllPopups","all","getUserInfo","getInitialCards","user","initialCard","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","deleteCard","filter","setUserInfo","userAvatar","setUserAvatar","setCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.43766cd9.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg'\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Card({ card, onClick, onLikeClick, onCardDelete }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some(item => item._id === currentUser._id);\n  const removeButtonClassName = `card__remove-button ${isOwn ? 'card__remove-button_active' : ''} link-translucence`;\n  const cardLikeButtonClassName = `card__like-button ${isLiked ? 'card__like-button_active' : ''} link-translucence`;\n\n  function handleClick() {\n    onClick(card);\n  }\n\n  function handleLikeClick() {\n    onLikeClick(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <li className=\"card\">\n      <div className=\"card__container\">\n        <div className=\"card__image-container\">\n          <img className=\"card__image\" src={card.link} onClick={handleClick} />\n        </div>\n        <button className={removeButtonClassName} onClick={handleDeleteClick} />\n        <h3 className=\"card__title\">{card.name}</h3>\n        <button className={cardLikeButtonClassName} onClick={handleLikeClick} />\n        <p className=\"card__like-score\">{card.likes.length}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js';\nimport iconPen from '../images/icon_pen.svg';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main({ cards, onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onCardDelete }) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section id=\"profile\" className=\"lead\">\n        <figure className=\"profile\">\n          <div className=\"profile__avatar-continer\">\n            <img src={currentUser.avatar} alt=\"Аватар\" className=\"profile__avatar-image\" />\n            <button className=\"profile__avatar-button\" onClick={onEditAvatar}>\n              <img src={iconPen} alt=\"\" className=\"profile__avatar-button-img\" />\n            </button>\n          </div>\n          <figcaption className=\"profile__info\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\n            <button className=\"profile__edit-button link-translucence\" onClick={onEditProfile} />\n          </figcaption>\n        </figure>\n        <button className=\"add-button link-translucence\" onClick={onAddPlace} />\n      </section>\n      <section className=\"cards\">\n        <ul className=\"cards__list\">\n          {cards.map(card => <Card\n            card={card}\n            key={card._id}\n            onClick={onCardClick}\n            onLikeClick={onCardLike}\n            onCardDelete={onCardDelete} />)}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({ name, title, submitText, submitWaitText, isOpen, onSubmit, onClose, children }) {\n  return (\n    <section\n      id={`${name}Popup`}\n      className={`popup popup_transparency-norm ${isOpen ? 'popup_opened' : ''}`}>\n      <form\n        action=\"#\"\n        name={name}\n        className=\"form\"\n        onSubmit={onSubmit}\n        noValidate>\n        <button\n          type=\"reset\"\n          className=\"popup__close-button link-translucence\"\n          onClick={onClose} />\n        <label\n          className=\"form__label\">{title}</label>\n        {children}\n        <button\n          type=\"submit\"\n          className=\"form__submit form__submit_nonactive link-translucence\">\n          <span\n            id=\"submitText\"\n            className=\"form__submit-text\">{submitText}</span>\n          <span\n            id=\"submitWaitText\"\n            className=\"form__submit-text form__submit-text_hide\">{submitWaitText}</span>\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onUpdateUser, onClose }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({ name, about: description });\n  }\n\n  return (\n    <PopupWithForm\n      name='editProfile'\n      title='Редактировать профиль'\n      submitText='Сохранить'\n      submitWaitText='Сохранение...'\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      onClose={onClose}>\n      <input\n        type=\"text\"\n        placeholder=\"Имя\"\n        name=\"name\"\n        id=\"profile-name-input\"\n        className=\"form__input\"\n        value={name || ''}\n        onChange={handleNameChange}\n        minLength=\"2\"\n        maxLength=\"40\"\n        required />\n      <span\n        id=\"profile-name-input-error\"\n        className=\"form__input-error\" />\n      <input\n        type=\"text\"\n        placeholder=\"Характеристика\"\n        name=\"about\"\n        id=\"profile-description-input\"\n        className=\"form__input\"\n        value={description || ''}\n        onChange={handleDescriptionChange}\n        minLength=\"2\"\n        maxLength=\"200\"\n        required />\n      <span\n        id=\"profile-description-input-error\"\n        className=\"form__input-error\" />\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onUpdateAvatar, onClose }) {\n  const inputRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({ avatar: inputRef.current.value });\n  }\n\n  return (\n    <PopupWithForm\n      name='editProfileAvatar'\n      title='Обновить аватар'\n      submitText='Создать'\n      submitWaitText='Сохранение...'\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      onClose={onClose}>\n      <input\n        type=\"url\"\n        placeholder=\"Ссылка на изображение\"\n        name=\"avatar\"\n        id=\"avatar-link-input\"\n        className=\"form__input\"\n        ref={inputRef}\n        required />\n      <span\n        id=\"avatar-link-input-error\"\n        className=\"form__input-error\" />\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onAdd, onClose }) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleLinkChange(evt) {\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAdd({ name, link });\n  }\n\n  return (\n    <PopupWithForm\n      name='addCard'\n      title='Новое место'\n      submitText='Создать'\n      submitWaitText='Сохранение...'\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      onClose={onClose}>\n      <input\n        type=\"text\"\n        placeholder=\"Название\"\n        name=\"name\"\n        id=\"card-name-input\"\n        className=\"form__input\"\n        value={name}\n        onChange={handleNameChange}\n        minLength=\"1\"\n        maxLength=\"30\"\n        required />\n      <span\n        id=\"card-name-input-error\"\n        className=\"form__input-error\" />\n      <input\n        type=\"url\"\n        placeholder=\"Ссылка на изображение\"\n        name=\"link\"\n        id=\"card-link-input\"\n        className=\"form__input\"\n        value={link}\n        onChange={handleLinkChange}\n        required />\n      <span\n        id=\"card-link-input-error\"\n        className=\"form__input-error\" />\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <section id=\"imagePopup\" className=\"popup popup_transparency-hard popup_opened\">\n      <figure className=\"image-popup\">\n        <button className=\"popup__close-button link-translucence\" onClick={onClose}></button>\n        <img className=\"image-popup__image\" src={card.link} />\n        <figcaption className=\"image-popup__title\">{card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","const url = 'https://mesto.nomoreparties.co/v1/cohort-15';\nconst token = 'c791e527-e4b7-4175-8eba-6e62f06389ee';\n\nclass Api {\n  constructor(options) {\n    this.options = options;\n  }\n\n  _sendQuery(url, options) {\n    return fetch(url, options).then((res) => {\n      if (res.ok) { return res.json(); }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return this._sendQuery(`${this.options.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.options.headers\n    });\n  }\n\n  setCard(card) {\n    return this._sendQuery(`${this.options.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.options.headers,\n      body: JSON.stringify(card)\n    });\n  }\n\n  deleteCard(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.options.headers\n    });\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/likes/${id}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this.options.headers,\n    });\n  }\n\n  getUserInfo() {\n    return this._sendQuery(`${this.options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.options.headers\n    });\n  }\n\n  setUserInfo(info) {\n    return this._sendQuery(`${this.options.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.options.headers,\n      body: JSON.stringify(info)\n    });\n  }\n\n  setUserAvatar(avatar) {\n    return this._sendQuery(`${this.options.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.options.headers,\n      body: JSON.stringify(avatar)\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: url,\n  headers: {\n    authorization: token,\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([user, initialCard]) => {\n        setCurrentUser(user);\n        setCards(initialCard);\n      }).catch(err => { console.log(err) });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then(newCard => {\n        const newCards = cards.map(item => item._id === card._id ? newCard : item);\n        setCards(newCards);\n      }).catch(err => { console.log(err); });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(item => item._id !== card._id);\n        setCards(newCards);\n      }).catch(err => { console.log(err); });\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user)\n      .then(user => { setCurrentUser(user); })\n      .catch(err => { console.log(err); });\n  }\n\n  function handleUpdateAvatar(userAvatar) {\n    api.setUserAvatar(userAvatar)\n      .then(user => { setCurrentUser(user); })\n      .catch(err => { console.log(err); });\n  }\n\n  function handleAddCard(card) {\n    api.setCard(card)\n      .then(card => { setCards([...cards, card]); })\n      .catch(err => { console.log(err); });\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          cards={cards}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete} />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onUpdateUser={handleUpdateUser}\n          onClose={closeAllPopups} />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClose={closeAllPopups} />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onAdd={handleAddCard}\n          onClose={closeAllPopups} />\n        <PopupWithForm\n          name='deleteCard'\n          title='Вы уверены?'\n          submitText='Да'\n          submitWaitText='Удаление...' />\n        {selectedCard && <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups} />}\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_pen.6bfdb354.svg\";"],"sourceRoot":""}