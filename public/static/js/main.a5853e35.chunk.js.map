{"version":3,"sources":["components/Header.js","components/Card.js","utils/Api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Card","props","card","link","onClick","onCardClick","name","likes","length","api","options","this","url","fetch","then","res","ok","json","Promise","reject","status","_sendQuery","baseUrl","method","headers","body","JSON","stringify","id","info","avatar","authorization","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","initialCard","about","catch","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","PopupWithForm","isOpen","action","noValidate","type","onClose","title","children","submitText","submitWaitText","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.a5853e35.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg'\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  return (\n    <li className=\"card\">\n      <div className=\"card__container\">\n        <div className=\"card__image-container\">\n          <img className=\"card__image\" src={props.card.link} onClick={handleClick} />\n        </div>\n        <button className=\"card__remove-button link-translucence\" />\n        <h3 className=\"card__title\">{props.card.name}</h3>\n        <button className=\"card__like-button link-translucence\" />\n        <p className=\"card__like-score\">{props.card.likes.length}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","class Api {\n  constructor(options) {\n    this.options = options;\n  }\n\n  _sendQuery(url, options) {\n    return fetch(url, options).then((res) => {\n      if (res.ok) { return res.json(); }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return this._sendQuery(`${this.options.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.options.headers\n    });\n  }\n\n  setCard(card) {\n    return this._sendQuery(`${this.options.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.options.headers,\n      body: JSON.stringify(card)\n    });\n  }\n\n  deleteCard(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.options.headers\n    });\n  }\n\n  setLike(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.options.headers,\n    });\n  }\n\n  deleteLike(id) {\n    return this._sendQuery(`${this.options.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.options.headers\n    });\n  }\n\n  getUserInfo() {\n    return this._sendQuery(`${this.options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.options.headers\n    });\n  }\n\n  setUserInfo(info) {\n    return this._sendQuery(`${this.options.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.options.headers,\n      body: JSON.stringify(info)\n    });\n  }\n\n  setUserAvatar(avatar) {\n    return this._sendQuery(`${this.options.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.options.headers,\n      body: JSON.stringify(avatar)\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: 'c791e527-e4b7-4175-8eba-6e62f06389ee',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","import React from 'react';\nimport Card from './Card.js';\nimport api from '../utils/Api.js';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([info, initialCard]) => {\n        setUserName(info.name);\n        setUserDescription(info.about);\n        setUserAvatar(info.avatar);\n        setCards(initialCard);\n      }).catch();\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section id=\"profile\" className=\"lead\">\n        <figure className=\"profile\">\n          <div className=\"profile__avatar-continer\">\n            <img src={userAvatar} alt=\"Аватар\" className=\"profile__avatar-image\" />\n            <button className=\"profile__avatar-button\" onClick={props.onEditAvatar}>\n              <img src=\"./images/icon_pen.svg\" alt=\"\" className=\"profile__avatar-button-img\" />\n            </button>\n          </div>\n          <figcaption className=\"profile__info\">\n            <h1 className=\"profile__title\">{userName}</h1>\n            <p className=\"profile__subtitle\">{userDescription}</p>\n            <button className=\"profile__edit-button link-translucence\" onClick={props.onEditProfile} />\n          </figcaption>\n        </figure>\n        <button className=\"add-button link-translucence\" onClick={props.onAddPlace} />\n      </section>\n      <section className=\"cards\">\n        <ul className=\"cards__list\">\n          {cards.map(card => <Card card={card} key={card._id} onCardClick={props.onCardClick} />)}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section id={`${props.name}Popup`} className={`popup popup_transparency-norm ${props.isOpen ? 'popup_opened' : ''}`}>\n      <form action=\"#\" name={props.name} className=\"form\" noValidate>\n        <button type=\"reset\" className=\"popup__close-button link-translucence\" onClick={props.onClose}></button>\n        <label className=\"form__label\">{props.title}</label>\n        {props.children}\n        <button type=\"submit\" className=\"form__submit form__submit_nonactive link-translucence\">\n          <span id=\"submitText\" className=\"form__submit-text\">{props.submitText}</span>\n          <span id=\"submitWaitText\" className=\"form__submit-text form__submit-text_hide\">{props.submitWaitText}</span>\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <section id=\"imagePopup\" className={`popup popup_transparency-hard ${props.isOpen ? 'popup_opened' : ''}`}>\n      <figure className=\"image-popup\">\n        <button className=\"popup__close-button link-translucence\" onClick={props.onClose}></button>\n        <img className=\"image-popup__image\" src={props.card.link} />\n        <figcaption className=\"image-popup__title\">{props.card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({...card, isOpen: true});\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditAvatar={handleEditAvatarClick}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardClick} />\n      <Footer />\n      <PopupWithForm\n        name='editProfile'\n        title='Редактировать профиль'\n        submitText='Сохранить'\n        submitWaitText='Сохранение...'\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"text\" placeholder=\"Имя\" name=\"name\" id=\"profile-name-input\" className=\"form__input\" minLength=\"2\"\n          maxLength=\"40\" required />\n        <span id=\"profile-name-input-error\" className=\"form__input-error\"></span>\n        <input type=\"text\" placeholder=\"Характеристика\" name=\"about\" id=\"profile-description-input\" className=\"form__input\"\n          minLength=\"2\" maxLength=\"200\" required />\n        <span id=\"profile-description-input-error\" className=\"form__input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        name='editProfileAvatar'\n        title='Обновить аватар'\n        submitText='Создать'\n        submitWaitText='Сохранение...'\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"url\" placeholder=\"Ссылка на изображение\" name=\"avatar\" id=\"avatar-link-input\" className=\"form__input\"\n          required />\n        <span id=\"avatar-link-input-error\" className=\"form__input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        name='addCard'\n        title='Новое место'\n        submitText='Создать'\n        submitWaitText='Сохранение...'\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"text\" placeholder=\"Название\" name=\"name\" id=\"card-name-input\" className=\"form__input\" minLength=\"1\"\n          maxLength=\"30\" required />\n        <span id=\"card-name-input-error\" className=\"form__input-error\"></span>\n        <input type=\"url\" placeholder=\"Ссылка на изображение\" name=\"link\" id=\"card-link-input\" className=\"form__input\"\n          required />\n        <span id=\"card-link-input-error\" className=\"form__input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        name='deleteCard'\n        title='Вы уверены?'\n        submitText='Да'\n        submitWaitText='Удаление...' />\n      <ImagePopup\n        card={selectedCard}\n        isOpen={selectedCard.isOpen}\n        onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}